# Generated by Django 4.0.3 on 2022-03-27 19:48

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('domainIndex', models.IntegerField(help_text='Internal index number for rows. Used as the primary key.', primary_key=True, serialize=False)),
                ('pdb', models.CharField(help_text='A 4-character PDB ID. Should match the PDB found in the Channel class for a given instance.', max_length=4)),
                ('domain', models.CharField(help_text='Functional annotation domain name.', max_length=100)),
                ('chain', models.CharField(help_text='PDB Chain where the domain or motif is found.', max_length=3)),
                ('residues', models.CharField(help_text='Amino acid residues where the domain is located. This is parsed as a text field, and should follow the format "20-40".', max_length=15)),
                ('notes', models.TextField(help_text='Specific information that is potentially relevant to the domain or motif.', max_length=1000)),
                ('citation', models.TextField(help_text='The citation where annotated information was found. DOI URLs are preferred.', max_length=1000)),
            ],
        ),
        migrations.RemoveField(
            model_name='channel',
            name='id',
        ),
        migrations.AddField(
            model_name='channel',
            name='iuphar',
            field=models.TextField(blank=True, help_text='IUPHAR ion channel database LINK. Not available for all channels, null ok', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='channel',
            name='kegg',
            field=models.CharField(blank=True, help_text='KEGG Pathway Reference number (e.g., K04857)', max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='channel',
            name='channelpedia',
            field=models.CharField(help_text='Channelpedia link, if applicable. Leave blank if there is no Channelpedia entry present.', max_length=1000),
        ),
        migrations.AlterField(
            model_name='channel',
            name='description',
            field=models.CharField(help_text='This is the long form (e.g. Transient receptor potential, vanilloid 1)', max_length=100),
        ),
        migrations.AlterField(
            model_name='channel',
            name='geneName',
            field=models.CharField(help_text='Use the gene abbreviation (e.g. TRPV1)', max_length=10),
        ),
        migrations.AlterField(
            model_name='channel',
            name='icn3d',
            field=models.TextField(help_text='The FULL-LENGTH ICn3D generated link. Maximum 4000 characters.', max_length=5000),
        ),
        migrations.AlterField(
            model_name='channel',
            name='ion',
            field=models.CharField(help_text='Use Na, K, Ca, Cl, H for individual ions, CAT for cations, ANI for anions, UNK for unknown', max_length=3),
        ),
        migrations.AlterField(
            model_name='channel',
            name='pdb',
            field=models.CharField(help_text='A 4-character PDB ID. This acts as the primary key.', max_length=4, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='channel',
            name='species',
            field=models.CharField(help_text='Genus and species', max_length=50),
        ),
        migrations.AlterField(
            model_name='channel',
            name='submitter',
            field=models.CharField(help_text='First initial, period, last name', max_length=50),
        ),
        migrations.AlterField(
            model_name='channel',
            name='uniprot',
            field=models.CharField(help_text="Six-character UniProt identifier. Used for linking to the channels' UniProt page.", max_length=6),
        ),
    ]
